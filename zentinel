const {
	createController,
	createModel,
	createRoute,
	createMiddleware,
	createCMR,
} = require("./core/MVC.Core.js");
const { createTest } = require("./core/Test.Core.js");

const parseCommand = (args) => {
	if (args.length !== 4) {
		console.error(
			"Usage: node zentinel.js create:controller|create:middleware|create:model|create:route|create:test <Name>"
		);
		process.exit(1);
	}

	const [command, type] = args[2].split(":");
	const entityName = args[3];
	if (command !== "create") {
		console.error(
			"Invalid command. Use create:controller, create:middleware, create:model, create:route or create:test"
		);
		process.exit(1);
	}

	if (type === "cmr") { // Create Controller, Model, Route
		createCMR(entityName);
	} else if (type === "controller") { // Create Controller
		createController(entityName);
	} else if (type === "middleware") { // Create Middleware
		createMiddleware(entityName);
	} else if (type === "model") { // Create Model
		createModel(entityName);
	} else if (type === "route") { // Create Route
		createRoute(entityName);
	} else if (type === "test") { // Create Test using Jest
		createTest(entityName);
	} else {
		console.error(
			"Invalid type specified. Use controller, middleware, model, or route."
		);
		process.exit(1);
	}
}

parseCommand(process.argv);
